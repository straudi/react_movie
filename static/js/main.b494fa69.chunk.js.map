{"version":3,"sources":["img/logo.svg","components/Movie.js","components/Header.js","components/Home.js","components/Detail.js","components/GlobalStyle.js","App.js","index.js"],"names":["module","exports","MovieBox","styled","div","Thumb","Movie","id","title","date","summary","poster","className","to","src","alt","length","substring","HeaderBlock","Anchor","a","Header","logo","href","Section","Home","useState","isLoading","setIsLoading","error","setError","movies","setMovies","useEffect","Axios","get","response","data","console","log","getMovies","results","map","movie","key","poster_path","original_title","overview","release_date","DetailSection","props","bgImage","TextBox","Summary","Detail","match","params","baseURL","setMovie","getMovie","vote_average","runtime","genres","genre","name","backdrop_path","GlobalStyle","createGlobalStyle","App","path","component","exact","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b494fa69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.31d26327.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst MovieBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: none;\r\n    flex-basis: 10%;\r\n    margin-top: 20px;\r\n    margin-bottom: 50px;\r\n    padding: 0 15px;\r\n\r\n    h2 {\r\n        color: #fff;\r\n        font-size:1.3rem;\r\n        margin : 3% 0; \r\n    }\r\n\r\n    span {\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nconst Thumb = styled.div`\r\n\r\n    &:hover{\r\n        opacity:0.5;\r\n    }\r\n`;\r\n\r\nfunction Movie({id, date, title, summary, poster}) {\r\n    const baseURL = \"https://image.tmdb.org/t/p/w300\";\r\n    return (\r\n        <MovieBox className=\"movie\">\r\n            <Link to = {`/detail/${id}`} >/ \r\n                <Thumb className=\"img\">\r\n                    <img src={`${baseURL}${poster}`} alt={title} title={title}/>\r\n                </Thumb>\r\n                <div className=\"text\">\r\n                    <h2 className=\"title\">{title.length > 18 ? `${title.substring(0,30)}...`: title}</h2>\r\n                    <span className=\"summary\">{summary.length > 18 ? `${summary.substring(0,80)}...`: summary}</span>\r\n                </div>\r\n            </Link>\r\n        </MovieBox>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from '../img/logo.svg';\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 2% 10% ;\r\n    background-color: #0d253f;\r\n\r\n    &.logo{\r\n        cursor: pointer;\r\n        width: 2%;\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        .logo{\r\n            cursor: pointer;\r\n            justify-content:center;\r\n        }\r\n        Button {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst Anchor = styled.a`\r\n    padding : 9px 25px;\r\n    background-color: rgba(1,180,228,1);\r\n    border:none;\r\n    border-radius: 50px;\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    &:hover {\r\n        background-color: rgba(144,206,161,0.8);\r\n    }\r\n    position:relative;\r\n`;\r\n\r\nfunction Header() {\r\n    return(\r\n        <HeaderBlock>\r\n            <img className=\"logo\" src={logo} alt=\"logo\"/>\r\n            <Anchor href=\"https://www.themoviedb.org/\">Contact</Anchor>\r\n        </HeaderBlock>\r\n    );\r\n}\r\n\r\nexport default Header;","import React,{ useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport Movie from './Movie';\r\nimport Header from './Header';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto; \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nfunction Home() {\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [movies, setMovies] = useState(null);\r\n\r\n    //useState로 요청 상태 수정, useEffect로 컴포넌트 랜더링 되는 시점에 요청을 시작 즉 마운트 될 때만 실행\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            try{\r\n                setError(null); //error 상태 수정\r\n                setIsLoading(true); //loading 상태 수정\r\n                const  response = await Axios.get(\"https://api.themoviedb.org/3/movie/now_playing?api_key=9f5cd63de20cc79f8c9aac64fc36ab6b\")\r\n                setMovies(response.data); \r\n                console.log(response.data);\r\n            }catch(e){\r\n                setError (e)\r\n            }\r\n            setIsLoading(false);\r\n        }\r\n        getMovies();\r\n    }, []); //업데이트 될 경우 실행할 필요 없을 시 빈 배열\r\n\r\n    \r\n   if (error) return <div>에러가 발생했습니다</div>;//에러가 날 경우 에러가 발생했습니다 화면 노출\r\n   if (isLoading) return <div>로딩중..</div>;\r\n   if (!movies) return null;\r\n   return (\r\n    <>\r\n        <Header />\r\n        <Section>\r\n            {movies.results.map(movie => (\r\n                <Movie key={movie.id} id={movie.id} poster={movie.poster_path} title={movie.original_title} summary={movie.overview} date={movie.release_date} />\r\n            ))}\r\n        </Section>\r\n    </>\r\n   );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport Header from './Header';\r\nimport styled from 'styled-components';\r\n\r\nconst DetailSection = styled.div`\r\n    background-image: url(${props => props.bgImage});\r\n    background-size: cover;\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity:0.3;\r\n    z-index:-5;\r\n`;\r\n\r\nconst Thumb = styled.div`\r\n    img{\r\n        margin:0 auto;\r\n        display:block;\r\n        padding-top:2%;\r\n    }\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n    padding : 5% 10%;\r\n    span{\r\n        margin-right:10px;\r\n    }\r\n`;\r\n\r\nconst Summary = styled.div`\r\n    padding-top:2%;\r\n`;\r\n\r\nconst Detail = ({ match, props}) => {\r\n    //파라미터를 받아 오기 위해 match안에 들어있는 params 값을 참조\r\n    const { id } = match.params;\r\n    const baseURL = \"https://image.tmdb.org/t/p/w300\";\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getMovie = async () => {\r\n            try{\r\n                setIsLoading(true);\r\n                const response = await Axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=10923b261ba94d897ac6b81148314a3f`)\r\n                setMovie(response.data); \r\n                console.log(response);\r\n            }catch(e){\r\n                console.error('Error during find the movie:', e);\r\n            }\r\n            setIsLoading(false);\r\n        }\r\n        getMovie();\r\n    }, [id]);\r\n   \r\n    if (isLoading) return <div>로딩중..</div>;\r\n    if (!movie) return <div>영화 정보를 불러 올 수 없습니다.</div>;\r\n    return (\r\n        <>\r\n        <Header />\r\n        \r\n            <div>\r\n                <Thumb className=\"poster\">\r\n                    <img src={`${baseURL}${movie.poster_path}`} alt={movie.original_title} title={movie.original_title}/>\r\n                </Thumb>\r\n                <TextBox className=\"text\">\r\n                    <div className=\"top\">\r\n                        <div className=\"title\">{movie.original_title}</div>\r\n                        <div className=\"star\">grade : {movie.vote_average}</div>\r\n                        <div className=\"running\">running Time: {movie.runtime}</div>\r\n                        {movie.genres && movie.genres.map((genre, {id}) => (\r\n                            <span key={genre.id}>{genre.name}</span>\r\n                        ))}\r\n                    </div>\r\n                    <Summary className=\"summary\">{movie.overview}</Summary>\r\n                </TextBox>\r\n            </div>\r\n            <DetailSection bgImage={`${baseURL}${movie.backdrop_path}`} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Detail;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle `\r\n  body {\r\n    background: #0d253f;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 1rem;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: auto;\r\n    box-sizing: border-box;\r\n    margin:0;\r\n  }\r\n  \r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom';\nimport Home from './components/Home'\nimport Detail from './components/Detail'\nimport GlobalStyle from './components/GlobalStyle';\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter>\n      <Route path=\"/\" component={Home} exact = {true} />\n      <Route path=\"/detail/:id\" component={Detail}/>\n      <Redirect from=\"*\" to=\"/\" />{/* 위 규칙을 벗어나면: 루트(/) 요청으로 리다이렉션 */}\n    </BrowserRouter>\n    <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}